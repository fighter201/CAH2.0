Optik:
    Erledigt:
    - erste Seite: nickname input; ✓
    - Startseite: buttons für create/join Game ✓
    - createGame: maxSpieler(3-10 vorschlag), maxPunkte(50), Spielname(String Eingabe), Spielpasswort(String Eingabe), Edit: Anzahl der Handkarten(WC) ✓
    - create Game:  WC(schlage Liste mit Packeten(Häckchen setzen) vor) ✓
    - joinGame: Liste mit "Lobbynamen" und "Anzahl Spieler/max. Spieler ✓ 
        joinGame_func Zeile 139 aktuelle Anzahl an Spielern (es wird immer 0 von irgendwas angezeigt aber es können ja auch schon Leute in der Lobby sein) -> hab mir erst gedacht, die müssen dann alle über LobbyElement.addPlayer() hinzugefügt werden, aber ergibt Sinn, dass von Anfang an drin zu haben.
    - Lobby warte-Seite: Liste mit Teilnehmer, startbutton, settings(siehe createGame) ✓
        -> Möglichkeit für Host, Einstellung nochmal zu bearbeiten ✓
        -> Unterschiedliche Ansichten für Host/ Mitspieler ✓
    - Spielseite:
        - auf jeder Seite: Scoreboard, mit Rankingfunktion ✓
        - Wartebildschirm für Czar: mit BC (eventuell: seine WC) ✓
        - Auswahl der WC für Slaves: mit BC(schlage max 5 in einer Reihe vor) und WC ✓
        - Cards htmlElemente über js erzeugen ✓
    
    In Arbeit:
    - Spielseite:
        wegen socket.io müssen alle Element in eine html-Datei und werden bei Bedarf ein/ausgeblendet
        - Auswahl des Gewinners für Czar: BC und alle gelegten WC(es können auch immer 2 WC zusammen gehören) -> anderen button für czar einbauen
        - Wartebildschirm für Slaves: BC alle gelegten WC
        - Gewinnerdisplay:
        - Endbildschirm: Scoreboard

    Ausstehend:
    - createGame (Ergänzungen): optional Zeitbegrenzung für die Runden, input[number] stylen
    - Lobby warte-Seite: eventuell: chat, settings(siehe createGame) vervollständigen
    
        
    Für den Schluss/ wenn noch Zeit übrig ist:
    - dark Mode -> über Dropdownmenu in header einstellbar
    - Nickname im Header anzeigen
    - Möglichkeit, Lobby offen oder geschlossen (mit Whitelist) zu erstellen
    - burnrunde -> Möglichkeit, die Karten zu entfernen ist in game_functionality.js eingebaut, noch nicht funktionsfähig
    - blank cards -> Möglichkeit ist in game_functionality.js eingebaut
    - packages erstellen(custom WC,BC)

    Für den Schluss vom Schluss:
    - rang system
    - admin center
    - statistiken

Engine:
    - createGame:
        - alles was sonst noch nötig ist -> Einstellungen abspeichern, hinterlegte CardSets einfüttern, ... ✓
    - Spielseite:
        - (am besten zusammen) game_functionality.js, Game.js, Player.js irgendwie zusammenwurschteln
    - Generell:
        - Bei mir kommt immer die Fehlermeldung:
            'ReferenceError: io is not defined' in game.html
            bzw.
            'TypeError: socket is undefined' in game_functionality.js
        -> fehlen da einfach noch Ordner auf gitHub?
    
Laden von den Packages:
    Der Datenbankzugriff auf der client Seite muss mit php gemacht werden nicht js(problem ist auf der client Seite gibt es kein "require" was man für die db verbindung braucht).
    Darstellen dann in dem Stil: echo "<li> package1 </li>
    Falls das nicht so leicht funktioniert kann man auch socket.io missbrauchen um auf der client Seite dann leicht js zum laden zu benutzen
    -> Edit bene: Würde auch dann sowas wie <script> 'echo "addCardSet(blabla); </script> zum Erzeugen der grafischen Elemente gehen? 
          Zur Not würde das wahrscheinlich auch so gehen wie du gemeint hast, wobei ich aber (noch) keine Ahnung hab wie und das seinerseits ein Missbrauch von gepflegtem html ist

Sonstiges:
    
